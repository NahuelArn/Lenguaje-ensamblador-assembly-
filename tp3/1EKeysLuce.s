Escribir un programa que encienda una luz a la vez, de las ocho conectadas al puerto paralelo del
microprocesador a trav√©s de la PIO, en el siguiente orden de bits: 0-1-2-3-4-5-6-7-6-5-4-3-2-1-0-1-2-3-
4-5-6-7-6-5-4-3-2-1-0-1-..., es decir, 00000001, 00000010, 00000100, etc. Cada luz debe estar
encendida durante un segundo. El programa nunca termina.


;CONFIG DEL PIO
PA EQU 30H
PB EQU 31H

CA EQU 32H
CB EQU 33H
;PIC
EOI EQU 20H
IMR EQU 21H
;TIMER
CONT EQU 10H
COMP EQU 11H

INT1 EQU 25H ;TIMER

ORG 1000H
FLAG DB 0
BINARIO DB 1;00000001B ; 1
BINARIO2 DB ?
;FIN DB ?
;BINARIO_RESTA DB 10000000B ;128

;CONT7 DB 7
;CONT7GLOBAL DB 7

ORG 40
PUNTERO_SUBRUTINA DW 3000H

ORG 3000H
PUSH AX
CALL LUCES
CMP FLAG, 1
JNZ TO_THE_MOON

CALL RESTAX7         ;TOY ACA2
CALL LUCES_RESTA
JMP TERMINO ;SALGO DE LA INTERRUPCION
TO_THE_MOON: NOP             ;SALTO ACA

CALL SUMAR

CALL VALIDADOR
JMP TERMINO

RESTAX7: NOP
PUSH AX
MOV DL, 7
LAZO3: NOP
;---------------
CMP DL, 0          
JZ SALTEO2
MOV AX, BINARIO
ADD BINARIO, AX
DEC DL
JMP LAZO3
SALTEO2: POP AX
RET

LUCES_RESTA: NOP    
PUSH AX
PUSH CX
;--------------
MOV AL, BINARIO2
OUT PB, AL
;COSARARA
MOV BX, OFFSET BINARIO2
MOV CX, [BX]
MOV BINARIO, CX
CMP BINARIO, 1 ;CONTROLO QUE NO ESTOY PARADO EN 1 CON MI BINARIO ASI DOY LA VUELTA
JNZ PROSIGA
DEC FLAG
;RESETERO BINARIO2
PROSIGA: NOP
MOV BINARIO2, 0
POP CX
POP AX
RET

VALIDADOR: NOP
;MOV AX, BINARIO ;ALPEDO
CMP BINARIO, 128
JNZ SALTEO   ;JC?
INC FLAG         ;ME AVISA SI LLEGUE AL MAX
SALTEO: RET


SUMAR: NOP       ;ENCARGADO DE PASAR AL SIGUIENTE IZQUIERDA
MOV AX, BINARIO
ADD BINARIO, AX
RET


LUCES: NOP       ;IMPRIME LUCES
MOV AL, BINARIO
OUT PB, AL
RET



TERMINO: NOP  ;TERMINA TOODO
MOV AL, 0    ;REINICIO EL TIMER/CONTADOR
OUT CONT, AL

MOV AL, EOI  ;AVISO QUE TERMINE LA INTERRUPCION
OUT EOI, AL
POP AX
IRET

ORG 2000H
;PRE CONFIG LUCES
MOV AL, 0
OUT CB, AL
;PRE CONFIG INTERRUPCION
CLI
MOV AL, 11111101B
OUT IMR, AL

MOV AL, 10   ;PUNTERO A ORG 40
OUT INT1, AL

;CONFIG DEL TIMER

MOV AL, 1   ;COMPARADOR
OUT COMP, AL

MOV AL, 0
OUT CONT, AL ;CONTADOR

STI
LAZO: JMP LAZO
INT 0
END










;COSAS A TENER EN CUENTA CUANDO ESTOY PARADO EN 128
;Y QUIERO HACER UN DESPLAZAMIENTO PARA LA DERECHA TENGO QUE TENER EN CUENTA QUE VOY A NECESITAR 2 BYTES DESPUES 3 BYTES
; Y ASI SUCESIVAMENTE, EN VONSIM EL CORRIMIENTO SE VE REFLEJAO EN LA MEMORIA PRINCIPAL POR ESO TENGO QUE HACER
; UN LOOP PARA TRAERME EL VALOR Y VOLVERLO A PONER EN SU DIRECCION ASI NO ME VOY MUY LEJOS EN DIRECCIONES DE MEMERORIA
;EN ESTE PROGRAMA USE ESO, DE 1000H Q TENIA MI BINARIO, SE DESPLASABA PARA A 1001 o 1002 no recuerdo

;-----------
;DERECHA
;org 1000h
;binario db 10000000b ;ACA PONES TU BINARIO QUE VAS A ROTAR 
;fin_tabla db ?
;cont db 7
;org 3000h
;multiplicar: nop

;salto: cmp cont, 0  ; LA CANTIDAD DE VECES VA A SER LA POSICION A LA DERECHA Q SE VA A MOVER
;jz fin
;mov ax, binario
;add binario, ax
;dec cont
;jmp salto 
;fin: ret

;org 2000h

;call multiplicar
;mov bx, offset binario
;mov al, offset fin_tabla - offset binario
;int 7

;lazo: jmp lazo

;int 0
;end